[
    {
      "id": "A01:2021",
      "name": "Broken Access Control",
      "link": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
      "hints": [
        "This category had the most occurrences of CWEs in applications tested.",
        "On average, 3.81% of applications tested had one or more CWEs in this category.",
        "This risk category had more than 318k occurrences of CWEs.",
        "34 CWEs are mapped to this category.",
        "This category moved up from the fifth position in the previous edition."
      ]
    },
    {
      "id": "A02:2021",
      "name": "Cryptographic Failures",
      "link": "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/",
      "hints": [
        "This category was previously known as 'Sensitive Data Exposure'.",
        "The new name focuses on failures related to cryptography.",
        "This category often leads to sensitive data exposure or system compromise.",
        "It shifted up one position from the previous edition.",
        "The previous name was considered too broad and a symptom rather than a root cause."
      ]
    },
    {
      "id": "A03:2021",
      "name": "Injection",
      "link": "https://owasp.org/Top10/A03_2021-Injection/",
      "hints": [
        "94% of applications were tested for some form of this vulnerability.",
        "The maximum incidence rate for this vulnerability was 19%.",
        "The average incidence rate was 3.37%.",
        "33 CWEs are mapped to this category.",
        "Cross-site Scripting is now part of this category in this edition."
      ]
    },
    {
      "id": "A04:2021",
      "name": "Insecure Design",
      "link": "https://owasp.org/Top10/A04_2021-Insecure_Design/",
      "hints": [
        "This is a new category for 2021.",
        "It focuses on risks related to design flaws.",
        "This category emphasizes the need for threat modeling and secure design patterns.",
        "An insecure design cannot be fixed by perfect implementation alone.",
        "This category represents a shift towards 'moving left' in the development process."
      ]
    },
    {
      "id": "A05:2021",
      "name": "Security Misconfiguration",
      "link": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
      "hints": [
        "This category moved up from #6 in the previous edition.",
        "90% of applications were tested for some form of this issue.",
        "The average incidence rate was 4.5%.",
        "Over 208k occurrences of CWEs were mapped to this risk category.",
        "The former category for XML External Entities (XXE) is now part of this risk category."
      ]
    },
    {
      "id": "A06:2021",
      "name": "Vulnerable and Outdated Components",
      "link": "https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/",
      "hints": [
        "This category was previously titled 'Using Components with Known Vulnerabilities'.",
        "It moved up from #9 in the 2017 edition.",
        "This is a known issue that's difficult to test and assess risk for.",
        "It's the only category without CVEs mapped to the included CWEs.",
        "Default exploit and impact weights of 5.0 are factored into the scores for this category."
      ]
    },
    {
      "id": "A07:2021",
      "name": "Identification and Authentication Failures",
      "link": "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/",
      "hints": [
        "This category was previously called 'Broken Authentication'.",
        "It slid down from the second position in the previous edition.",
        "This category now includes CWEs more related to identification failures.",
        "The increased availability of standardized frameworks seems to be helping mitigate these issues.",
        "Despite sliding down, this category remains an integral part of the Top 10."
      ]
    },
    {
      "id": "A08:2021",
      "name": "Software and Data Integrity Failures",
      "link": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
      "hints": [
        "This is a new category for 2021.",
        "It focuses on making assumptions related to software updates, critical data, and CI/CD pipelines.",
        "This category had one of the highest weighted impacts from CVE/CVSS data.",
        "10 CWEs are mapped to this category.",
        "The previous A8:2017-Insecure Deserialization is now part of this larger category."
      ]
    },
    {
      "id": "A09:2021",
      "name": "Security Logging and Monitoring Failures",
      "link": "https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/",
      "hints": [
        "This category was previously called 'Insufficient Logging & Monitoring'.",
        "It moved up from #10 in the previous edition.",
        "This category is challenging to test for.",
        "Failures in this category can directly impact visibility, incident alerting, and forensics.",
        "This category isn't well represented in the CVE/CVSS data."
      ]
    },
    {
      "id": "A10:2021",
      "name": "Server-Side Request Forgery",
      "link": "https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/",
      "hints": [
        "This category was added based on the Top 10 community survey.",
        "It shows a relatively low incidence rate with above-average testing coverage.",
        "This vulnerability has above-average ratings for Exploit and Impact potential.",
        "The security community emphasized the importance of this category.",
        "This category represents an emerging threat that may not be fully represented in current data."
      ]
    },
    {
        "id": "M01:2024",
        "name": "Improper Credential Usage",
        "link": "https://owasp.org/www-project-mobile-top-10/2023-risks/m1-improper-credential-usage.html",
        "hints": [
            "This risk involves the insecure handling of credentials, such as hardcoding them in the application.",
            "Developers may mistakenly store sensitive credentials in shared preferences or local storage.",
            "Using weak or easily guessable passwords can lead to unauthorized access.",
            "Attackers might exploit improperly stored credentials to gain elevated privileges.",
            "Regularly rotating credentials and avoiding hardcoding them can mitigate this risk."
        ]
    },
    {
        "id": "M02:2024",
        "name": "Inadequate Supply Chain Security",
        "link": "https://owasp.org/www-project-mobile-top-10/2023-risks/m2-inadequate-supply-chain-security.html",
        "hints": [
            "This risk arises from using vulnerable third-party components in mobile applications.",
            "Compromised supply chains can lead to the introduction of malware or backdoors.",
            "Regular updates and thorough vetting of third-party libraries can mitigate this risk.",
            "Using components with known vulnerabilities can put the entire app at risk.",
            "Supply chain attacks have become increasingly common in recent years."
        ]
    },
    {
        "id": "M03:2024",
        "name": "Insecure Authentication/Authorization",
        "link": "https://owasp.org/www-project-mobile-top-10/2023-risks/m3-insecure-authentication-authorization.html",
        "hints": [
            "This risk often involves weak authentication mechanisms that attackers can easily bypass.",
            "Inadequate session management can lead to unauthorized access.",
            "Using outdated authentication protocols can expose the application to attacks.",
            "Ensuring that strong multi-factor authentication is implemented can reduce this risk.",
            "Improperly configured authorization can allow users to access unauthorized resources."
        ]
    },
    {
        "id": "M04:2024",
        "name": "Insufficient Input/Output Validation",
        "link": "https://owasp.org/www-project-mobile-top-10/2023-risks/m4-insufficient-input-output-validation.html",
        "hints": [
            "This risk involves failing to properly validate user input, leading to injection attacks.",
            "Inadequate output encoding can result in data leakage or script injection.",
            "Implementing proper input sanitation techniques can help mitigate this risk.",
            "User inputs should be considered untrusted and validated against strict criteria.",
            "Failure to handle input validation can lead to various types of injection attacks."
        ]
    },
    {
        "id": "M05:2024",
        "name": "Insecure Communication",
        "link": "https://owasp.org/www-project-mobile-top-10/2023-risks/m5-insecure-communication.html",
        "hints": [
            "This risk involves transmitting sensitive data over unsecured or weakly encrypted channels.",
            "Using outdated SSL/TLS versions can make communications vulnerable to interception.",
            "Data transmitted over public networks should always be encrypted using strong protocols.",
            "Failure to verify server certificates can result in man-in-the-middle attacks.",
            "Encrypting both data in transit and at rest is crucial for mobile security."
        ]
    },
    {
        "id": "M06:2024",
        "name": "Inadequate Privacy Controls",
        "link": "https://owasp.org/www-project-mobile-top-10/2023-risks/m6-inadequate-privacy-controls.html",
        "hints": [
            "This risk involves the mishandling of personal data, leading to privacy violations.",
            "Lack of proper consent management can result in regulatory compliance issues.",
            "Applications should limit data collection to the minimum necessary for functionality.",
            "Storing excessive or unnecessary personal data increases the risk of breaches.",
            "Implementing robust data minimization and retention policies can mitigate this risk."
        ]
    },
    {
        "id": "M07:2024",
        "name": "Insufficient Binary Protections",
        "link": "https://owasp.org/www-project-mobile-top-10/2023-risks/m7-insufficient-binary-protection.html",
        "hints": [
            "This risk involves a lack of protections against reverse engineering and tampering.",
            "Attackers may exploit vulnerabilities in binaries to inject malicious code.",
            "Implementing obfuscation and binary protection techniques can mitigate this risk.",
            "Mobile applications should be hardened to resist reverse engineering attempts.",
            "Binary protections can prevent attackers from modifying application code or logic."
        ]
    },
    {
        "id": "M08:2024",
        "name": "Security Misconfiguration",
        "link": "https://owasp.org/www-project-mobile-top-10/2023-risks/m8-security-misconfiguration.html",
        "hints": [
            "This risk arises from insecure default configurations or exposed debugging information.",
            "Leaving unnecessary services enabled can increase the attack surface.",
            "Ensuring that only necessary permissions and services are enabled can reduce this risk.",
            "Inadequate error handling can expose sensitive system information to attackers.",
            "Regularly auditing and updating configurations can prevent security misconfigurations."
        ]
    },
    {
        "id": "M09:2024",
        "name": "Insecure Data Storage",
        "link": "https://owasp.org/www-project-mobile-top-10/2023-risks/m9-insecure-data-storage.html",
        "hints": [
            "This risk involves storing sensitive data in an unencrypted or poorly protected manner.",
            "Data stored in cleartext can be easily accessed if the device is compromised.",
            "Using secure storage mechanisms provided by the platform can mitigate this risk.",
            "Applications should avoid storing sensitive data on the device unless necessary.",
            "Insecure storage can lead to unauthorized access and data breaches."
        ]
    },
    {
        "id": "M10:2024",
        "name": "Insufficient Cryptography",
        "link": "https://owasp.org/www-project-mobile-top-10/2023-risks/m10-insufficient-cryptography.html",
        "hints": [
            "This risk involves using outdated or weak cryptographic algorithms and keys.",
            "Failing to use secure key management practices can compromise data security.",
            "Ensuring the use of up-to-date cryptographic standards can mitigate this risk.",
            "Improper implementation of cryptographic libraries can result in vulnerabilities.",
            "Weak or hardcoded cryptographic keys can easily be compromised by attackers."
        ]
    }
]

